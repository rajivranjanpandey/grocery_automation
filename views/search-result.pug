doctype html
html(lang="en")
  head
    title Grocery Automation
    link(rel="stylesheet", href="/assets/index.css",type="text/css")
    script.
      async function addItem(platform,item){
        console.log(item,typeof item);
        try{
        const res = await fetch('/add',
          {
            method:'POST',
            header:{"Content-Type":'application/json'},
            body:JSON.stringify({platform,item})
          });
          console.log({res});
          if(res){
            const doc = document.getElementById(item.productId);
              if(doc){
                doc.innerHTML = 'Added';
                doc.classList.add('added');
            }
          }
        }catch(e){}
      }
      async function downloadFile(){
        const res = await fetch('/cart-file',{
          method:'GET'
        });
        const stream = new Response(res.body);
        const file = await stream.blob();
        var a = document.createElement("a");
        //- var file = new Blob([res.body], {type: 'text/plain'});
        a.href = URL.createObjectURL(file);
        a.download = 'checklist.txt';
        a.click();
      }
      
  body
    button(type="button",class='add-btn',onclick=`downloadFile()`) Download
    div.result-container
      each platform in Object.keys(searchRes)
        div.platform-container.product-container
          h3=platform.toUpperCase()
          ul.product-list 
            each val in searchRes[platform] 
              li.product-item-cont
                div.product-item 
                  img(src=val.image, alt=val.name,loading='lazy')
                  p= `${val.name} ${val.quantity||''}`
                  div.price-add
                    span= val.sp
                    button(type="button",id=`${val.productId}`,class='add-btn',value='Add',onclick=`addItem(${JSON.stringify(platform)},${JSON.stringify(val)})`) Add